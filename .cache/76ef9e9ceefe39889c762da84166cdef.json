{"dependencies":[{"name":"./utils/utils","loc":{"line":3,"column":22}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils/utils\");\n// Simple Generic\n//\nfunction echo(data) {\n    return data;\n}\nconsole.log(echo(\"RobK\"));\nconsole.log(echo(27));\nconsole.log(echo({ name: \"Max\", age: 27 }));\n// Better Generic\n//\n// The \"<T>\" construct enforces the data type to the function\n//\nfunction betterEcho(data) {\n    return data;\n}\nconsole.log(betterEcho(\"RobK\").length);\nconsole.log(betterEcho(27));\nconsole.log(betterEcho({ name: \"Max\", age: 27 }));\nutils_1.sep();\n// Built-In Generics\n//\nvar testResults = [1.94, 2.33];\ntestResults.push(-1.99);\nconsole.log(\"Test results are...\" + testResults);\nfunction printAll(args) {\n    args.forEach(function (element) { return console.log(element); });\n}\nprintAll(['Apple', 'Banana']);\nvar echo2 = betterEcho;\nconsole.log(echo2(\"Something\"));\nutils_1.sep(\"Generic Classes\");\n// Generic Classes\n//\nvar SimpleMath = /** @class */ (function () {\n    function SimpleMath() {\n    }\n    SimpleMath.prototype.calculate = function () {\n        return +this.baseValue * +this.multiplyValue;\n    };\n    return SimpleMath;\n}());\n// casts vars within generic class to numbers with +\n// sign in front of numbers within calculate function\n//\nvar simpleMath = new SimpleMath();\nsimpleMath.baseValue = \"15\";\nsimpleMath.multiplyValue = 20;\nconsole.log(simpleMath.calculate());\n//# sourceMappingURL=index.js.map"},"hash":"3cc9543fc32af987f9fbc9b3d7ff113c"}